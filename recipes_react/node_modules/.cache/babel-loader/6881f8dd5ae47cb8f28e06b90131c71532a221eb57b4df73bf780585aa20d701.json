{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuzhou/neu/2023fall/cs5610web/project/recipes-react-app/src/components/Details.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetails = ({\n  match\n}) => {\n  _s();\n  //   const uniqueIdentifier = match.params.id;\n  const uniqueIdentifier = '52772';\n  const [recipe, setRecipe] = useState(null);\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${uniqueIdentifier}`);\n        const data = await response.json();\n        setRecipe(data.meals[0]); // 假设 API 返回的数据在 meals 数组的第一个对象中\n      } catch (error) {\n        console.error('Error fetching recipe:', error);\n      }\n    };\n    fetchRecipe();\n  }, [uniqueIdentifier]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: recipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: recipe.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [recipe.strArea, \" | \", recipe.strTags]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe.strMealThumb,\n        alt: recipe.strMeal,\n        className: \"img-fluid mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(recipe).filter(key => key.includes('strIngredient') && recipe[key]).map((ingredientKey, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [recipe[ingredientKey], \" - \", recipe[`strMeasure${ingredientKey.slice(13)}`]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recipe...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetails, \"ABVStMmGS+bQ33IV6osc8zsYsnM=\");\n_c = RecipeDetails;\nexport default RecipeDetails;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RecipeDetails","match","_s","uniqueIdentifier","recipe","setRecipe","fetchRecipe","response","fetch","data","json","meals","error","console","className","children","strMeal","fileName","_jsxFileName","lineNumber","columnNumber","strArea","strTags","src","strMealThumb","alt","Object","keys","filter","key","includes","map","ingredientKey","index","slice","strInstructions","_c","$RefreshReg$"],"sources":["/Users/zhangyuzhou/neu/2023fall/cs5610web/project/recipes-react-app/src/components/Details.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst RecipeDetails = ({ match }) => {\n//   const uniqueIdentifier = match.params.id;\n  const uniqueIdentifier ='52772'\n  const [recipe, setRecipe] = useState(null);\n\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${uniqueIdentifier}`);\n        const data = await response.json();\n        setRecipe(data.meals[0]); // 假设 API 返回的数据在 meals 数组的第一个对象中\n      } catch (error) {\n        console.error('Error fetching recipe:', error);\n      }\n    };\n\n    fetchRecipe();\n  }, [uniqueIdentifier]);\n\n  return (\n    <div className=\"container mt-4\">\n      {recipe ? (\n        <div>\n          {/* Meal 名字 */}\n          <h2>{recipe.strMeal}</h2>\n          \n          {/* Meal 的 strArea 和 strTags */}\n          <p>{recipe.strArea} | {recipe.strTags}</p>\n\n          {/* Meal 的图片 */}\n          <img src={recipe.strMealThumb} alt={recipe.strMeal} className=\"img-fluid mb-3\" />\n\n          {/* Ingredients 列表 */}\n          <h4>Ingredients</h4>\n          <ul>\n            {Object.keys(recipe)\n              .filter(key => key.includes('strIngredient') && recipe[key])\n              .map((ingredientKey, index) => (\n                <li key={index}>{recipe[ingredientKey]} - {recipe[`strMeasure${ingredientKey.slice(13)}`]}</li>\n              ))}\n          </ul>\n\n          {/* Meal 的做法 */}\n          <h4>Instructions</h4>\n          <p>{recipe.strInstructions}</p>\n          \n          {/* 可能还有其他信息，你可以根据需要添加 */}\n        </div>\n      ) : (\n        <p>Loading recipe...</p>\n      )}\n    </div>\n  );\n};\n\n\nexport default RecipeDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}