{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuzhou/neu/2023fall/cs5610web/project/recipes-react-app/src/components/Details.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\n// import { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BASE_API = process.env.REACT_APP_BASE_API_URL;\nexport const USERS_API = `${BASE_API}/api/components`;\nconst RecipeDetails = ({\n  match\n}) => {\n  _s();\n  // const { recipeId } = useParams();\n  const recipeId = '52772';\n  const [recipe, setRecipe] = useState(null);\n  const [commentContent, setCommentContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const URL = \"http://localhost:4000/api/comments\";\n  const URLSaved = \"http://localhost:4000/api/comments/saved\";\n  const [user, setUser] = useState({\n    id: 1,\n    username: 'example_user',\n    email: 'user@example.com',\n    saved: ['52772', 'other_recipe_id'] // 保存的菜谱ID列表\n    // 其他用户信息...\n  });\n\n  const [isSaved, setIsSaved] = useState(false);\n\n  // const user ={\n  //   id: 1,\n  //   username: 'example_user',\n  //   email: 'user@example.com',\n  //   saved: ['52772', 'other_recipe_id'], // 保存的菜谱ID列表\n  //   // 其他用户信息...\n  // }\n\n  const getCommentsForRecipe = async recipeId => {\n    const response = await axios.get(`${URL}/${recipeId}`);\n    return response.data;\n  };\n  const getSavedRecipe = async userId => {\n    const response = await axios.get(`${URLSaved}/${userId}`);\n    return response.data;\n  };\n\n  //   const createComment = async (commentData) => {\n  //     const response = await axios.post(URL, commentData);\n  //     // return response.data;\n  //     return response.status;\n  // };\n  const createComment = async commentData => {\n    try {\n      const response = await axios.post(URL, commentData);\n      return response.status === 200; // 返回一个布尔值，表示请求是否成功\n    } catch (error) {\n      console.error('Failed to post comment:', error);\n      return false; // 请求失败，返回 false\n    }\n  };\n\n  const formatDate = dateString => {\n    return dateString.substring(0, 10); // 截取日期部分，保留年月日\n  };\n\n  // const updateSavedRecipe = async (userId, newRecipe) => {\n  //   try {\n  //     const updateSavedRecipe = await axios.post(`${URL}/update/${userId}`, userId, newRecipe);\n  //     // return response.status === 200; // 返回一个布尔值，表示请求是否成功\n  //     return updateSavedRecipe\n  //   } catch (error) {\n  //     console.error('Failed to update savedRecipe:', error);\n  //     return false; // 请求失败，返回 false\n  //   }\n  // };\n\n  const updateSavedRecipe = async (newRecipe, userId) => {\n    try {\n      const response = await axios.post(`${URL}/update/${userId}`, newRecipe);\n      return response;\n    } catch (error) {\n      console.error('Failed to update savedRecipe:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchRecipeAndComments = async () => {\n      try {\n        // 获取菜谱信息\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipeId}`);\n        const data = await response.json();\n        setRecipe(data.meals[0]);\n        const recipeSaved = isRecipeSaved(); // 检查菜谱是否已保存\n        // const userId = user.id\n        // const savedRecipe = await getSavedRecipe(userId);\n        // const isRecipeSaved = savedRecipe.includes(recipeId);\n        // console.log(savedRecipe)\n        // console.log(isRecipeSaved); // 如果包含则为 true，否则为 false\n\n        setIsSaved(recipeSaved); // 设置isSaved状态\n        // 获取评论信息\n        console.log(recipeId);\n        const commentsData = await getCommentsForRecipe(recipeId);\n        console.log(\"fetch1\");\n        console.log(commentsData.comments);\n        setComments(commentsData.comments);\n        // console.log(comments)\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchRecipeAndComments();\n  }, [recipeId, isSaved]);\n  const handlePostComment = async () => {\n    const userId = user.id; // 获取用户ID\n    // const commentId = uuidv4(); // 生成评论的唯一ID\n    const commentData = {\n      // commentId: commentId,\n      userId: userId,\n      recipeId: recipeId,\n      // 使用你的recipeId变量\n      commentContent: commentContent,\n      time: new Date().toISOString() // 获取当前时间\n    };\n\n    try {\n      const response = await createComment(commentData);\n      console.log(\"this is response\" + response);\n      if (response) {\n        // 在此处处理成功发送评论后的逻辑\n        // 例如清除输入框中的内容，更新评论列表等\n        setCommentContent(''); // 清空评论内容\n        // 更新评论列表等操作\n        setComments([...comments, commentData]);\n      } else {\n        // 处理请求失败的情况\n        console.error('Failed to post comment');\n      }\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  const isRecipeSaved = async () => {\n    try {\n      const userId = user.id;\n\n      // console.log(userId)\n      const savedRecipe = await getSavedRecipe(userId);\n      console.log(\"isRecipeSaved\");\n      console.log(savedRecipe);\n      const isRecipeSaved = savedRecipe.user.saveRecipe.includes(recipeId);\n      console.log(isRecipeSaved); // 如果包含则为 true，否则为 false\n      return isRecipeSaved;\n    } catch (error) {\n      console.error('Error fetching savedRecipe:', error);\n    }\n  };\n\n  // const isRecipeSaved_tep = () => {\n  //   if (user&& user.saved) {\n\n  //     if (user.saved.includes(recipeId)){\n  //       return true;\n  //     }\n  //   }\n  //   return false;\n  // };\n\n  const handleSave = async () => {\n    if (user) {\n      if (isSaved) {\n        // 执行取消保存的逻辑，从 SaveLists 表中删除保存项\n        console.log('Unsave recipe');\n        // set current user with new saved\n        // const updatedSaved = user.saved.filter(id => id !== recipeId);\n        // setUser({ ...user, saved: updatedSaved })\n\n        const savedRecipe = await getSavedRecipe(user.id);\n        const updatedSaveRecipe = savedRecipe.user.saveRecipe.filter(id => id !== recipeId);\n        savedRecipe.user.saveRecipe = updatedSaveRecipe;\n        const response = await updateSavedRecipe(savedRecipe.user.saveRecipe, user.id);\n        console.log(response);\n        //使用 fetch 或其他适当的方法向后端发送取消保存请求\n        setIsSaved(!isSaved);\n      } else {\n        // 执行保存的逻辑，将保存项添加到 SaveLists 表中\n        const updatedSaved = [...user.saved, recipeId];\n        const response = await updateSavedRecipe(updatedSaved, user.id);\n        // setUser(prevUser => ({ ...prevUser, saved: updatedSaved }));\n        // setUser({ ...user, saved: updatedSaved });\n        setUser({\n          ...user,\n          saved: updatedSaved\n        });\n        // 使用 fetch 或其他适当的方法向后端发送保存请求\n        setIsSaved(!isSaved);\n      }\n    } else {\n      console.log('User is not logged in');\n      // 在这里触发登录界面或者显示提示信息\n    }\n  };\n  // console.log(\"t1\")\n  // console.log(Object.values(comments))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [recipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.strMealThumb,\n            alt: recipe.strMeal,\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [recipe.strArea, \" | \", recipe.strTags]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.keys(recipe).filter(key => key.includes('strIngredient') && recipe[key]).map((ingredientKey, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [recipe[ingredientKey], \" - \", recipe[`strMeasure${ingredientKey.slice(13)}`]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: recipe.strInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading recipe...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSave,\n          style: {\n            backgroundColor: 'black'\n          },\n          children: isSaved ? 'Unsave' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          className: \"form-control mb-2\",\n          placeholder: \"Write your comment here...\",\n          value: commentContent,\n          onChange: e => setCommentContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handlePostComment,\n          style: {\n            backgroundColor: 'black'\n          },\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: 'none'\n          },\n          children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/Profile/${comment.userId}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: '10px'\n                    },\n                    children: comment.userId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatDate(comment.time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.commentContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 9\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetails, \"3h2ASU9OdaeOl43VcagN4+MIGJU=\");\n_c = RecipeDetails;\nexport default RecipeDetails;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","axios","jsxDEV","_jsxDEV","BASE_API","process","env","REACT_APP_BASE_API_URL","USERS_API","RecipeDetails","match","_s","recipeId","recipe","setRecipe","commentContent","setCommentContent","comments","setComments","URL","URLSaved","user","setUser","id","username","email","saved","isSaved","setIsSaved","getCommentsForRecipe","response","get","data","getSavedRecipe","userId","createComment","commentData","post","status","error","console","formatDate","dateString","substring","updateSavedRecipe","newRecipe","fetchRecipeAndComments","fetch","json","meals","recipeSaved","isRecipeSaved","log","commentsData","handlePostComment","time","Date","toISOString","savedRecipe","saveRecipe","includes","handleSave","updatedSaveRecipe","filter","updatedSaved","children","className","src","strMealThumb","alt","strMeal","fileName","_jsxFileName","lineNumber","columnNumber","strArea","strTags","Object","keys","key","map","ingredientKey","index","slice","strInstructions","onClick","style","backgroundColor","rows","placeholder","value","onChange","e","target","listStyle","comment","display","flexDirection","alignItems","to","marginRight","_c","$RefreshReg$"],"sources":["/Users/zhangyuzhou/neu/2023fall/cs5610web/project/recipes-react-app/src/components/Details.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Link, useParams } from \"react-router-dom\";\n// import { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\n\nexport const BASE_API = process.env.REACT_APP_BASE_API_URL;\nexport const USERS_API = `${BASE_API}/api/components`;\n\n\nconst RecipeDetails = ({ match }) => {\n  // const { recipeId } = useParams();\n  const recipeId='52772'\n  const [recipe, setRecipe] = useState(null);\n  const [commentContent, setCommentContent] = useState('');\n  const [comments, setComments] = useState([]);\n  const URL =  \"http://localhost:4000/api/comments\";\n  const URLSaved =  \"http://localhost:4000/api/comments/saved\";\n  const [user, setUser] = useState({\n    id: 1,\n    username: 'example_user',\n    email: 'user@example.com',\n    saved: ['52772', 'other_recipe_id'], // 保存的菜谱ID列表\n    // 其他用户信息...\n  });\n  const [isSaved, setIsSaved] = useState(false);\n\n  // const user ={\n  //   id: 1,\n  //   username: 'example_user',\n  //   email: 'user@example.com',\n  //   saved: ['52772', 'other_recipe_id'], // 保存的菜谱ID列表\n  //   // 其他用户信息...\n  // }\n\n  const getCommentsForRecipe = async (recipeId) => {\n    const response = await axios.get(`${URL}/${recipeId}`);\n    return response.data;\n  };\n\n  const getSavedRecipe = async (userId) => {\n    const response = await axios.get(`${URLSaved}/${userId}`);\n    return response.data;\n  };\n\n//   const createComment = async (commentData) => {\n//     const response = await axios.post(URL, commentData);\n//     // return response.data;\n//     return response.status;\n// };\n  const createComment = async (commentData) => {\n    try {\n      const response = await axios.post(URL, commentData);\n      return response.status === 200; // 返回一个布尔值，表示请求是否成功\n    } catch (error) {\n      console.error('Failed to post comment:', error);\n      return false; // 请求失败，返回 false\n    }\n};\n\nconst formatDate = (dateString) => {\n  return dateString.substring(0, 10); // 截取日期部分，保留年月日\n};\n\n// const updateSavedRecipe = async (userId, newRecipe) => {\n//   try {\n//     const updateSavedRecipe = await axios.post(`${URL}/update/${userId}`, userId, newRecipe);\n//     // return response.status === 200; // 返回一个布尔值，表示请求是否成功\n//     return updateSavedRecipe\n//   } catch (error) {\n//     console.error('Failed to update savedRecipe:', error);\n//     return false; // 请求失败，返回 false\n//   }\n// };\n\nconst updateSavedRecipe = async (newRecipe, userId) => {\n  try {\n    const response = await axios.post(`${URL}/update/${userId}`, newRecipe);\n    return response\n  } catch (error) {\n    console.error('Failed to update savedRecipe:', error);\n  }\n\n}\n\n  \n  useEffect(() => {\n    const fetchRecipeAndComments = async () => {\n      try {\n        // 获取菜谱信息\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${recipeId}`);\n        const data = await response.json();\n        setRecipe(data.meals[0]);\n\n        const recipeSaved = isRecipeSaved(); // 检查菜谱是否已保存\n        // const userId = user.id\n        // const savedRecipe = await getSavedRecipe(userId);\n        // const isRecipeSaved = savedRecipe.includes(recipeId);\n        // console.log(savedRecipe)\n        // console.log(isRecipeSaved); // 如果包含则为 true，否则为 false\n\n        setIsSaved(recipeSaved); // 设置isSaved状态\n        // 获取评论信息\n        console.log(recipeId)\n        const commentsData = await getCommentsForRecipe(recipeId);\n        console.log(\"fetch1\")\n        console.log(commentsData.comments)\n        setComments(commentsData.comments);\n        // console.log(comments)\n      \n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchRecipeAndComments();\n  },  [recipeId,isSaved]);\n\n  \n  const handlePostComment = async () =>{\n    const userId = user.id; // 获取用户ID\n    // const commentId = uuidv4(); // 生成评论的唯一ID\n    const commentData = {\n        // commentId: commentId,\n        userId: userId,\n        recipeId: recipeId, // 使用你的recipeId变量\n        commentContent: commentContent,\n        time: new Date().toISOString(), // 获取当前时间\n    };\n    try {\n        const response = await createComment(commentData)\n        console.log(\"this is response\"+response)\n        if (response) {\n        // 在此处处理成功发送评论后的逻辑\n        // 例如清除输入框中的内容，更新评论列表等\n        setCommentContent(''); // 清空评论内容\n        // 更新评论列表等操作\n        setComments([...comments,commentData])\n        } else {\n          // 处理请求失败的情况\n          console.error('Failed to post comment');\n        }\n      } catch (error) {\n        console.error('Error posting comment:', error);\n      }\n  };\n\n  const isRecipeSaved = async () =>{\n    try {\n      const userId = user.id;\n      \n      // console.log(userId)\n      const savedRecipe = await getSavedRecipe(userId);\n      console.log(\"isRecipeSaved\");\n      console.log(savedRecipe);\n      const isRecipeSaved = savedRecipe.user.saveRecipe.includes(recipeId);\n      \n      console.log(isRecipeSaved); // 如果包含则为 true，否则为 false\n      return isRecipeSaved;\n    } catch (error) {\n      console.error('Error fetching savedRecipe:', error);\n    }\n\n  };\n\n  // const isRecipeSaved_tep = () => {\n  //   if (user&& user.saved) {\n       \n  //     if (user.saved.includes(recipeId)){\n  //       return true;\n  //     }\n  //   }\n  //   return false;\n  // };\n\n  const handleSave = async () =>{\n    if (user) {\n      if (isSaved) {\n        // 执行取消保存的逻辑，从 SaveLists 表中删除保存项\n        console.log('Unsave recipe');\n        // set current user with new saved\n        // const updatedSaved = user.saved.filter(id => id !== recipeId);\n        // setUser({ ...user, saved: updatedSaved })\n\n        const savedRecipe = await getSavedRecipe(user.id);\n        const updatedSaveRecipe = savedRecipe.user.saveRecipe.filter(id => id !== recipeId);\n        savedRecipe.user.saveRecipe = updatedSaveRecipe\n        const response = await updateSavedRecipe(savedRecipe.user.saveRecipe, user.id)\n        \n        console.log(response)\n        //使用 fetch 或其他适当的方法向后端发送取消保存请求\n        setIsSaved(!isSaved);\n        \n      } else {\n        // 执行保存的逻辑，将保存项添加到 SaveLists 表中\n        const updatedSaved = [...user.saved, recipeId];\n        const response = await updateSavedRecipe(updatedSaved, user.id)\n        // setUser(prevUser => ({ ...prevUser, saved: updatedSaved }));\n        // setUser({ ...user, saved: updatedSaved });\n        setUser({ ...user, saved: updatedSaved })\n        // 使用 fetch 或其他适当的方法向后端发送保存请求\n        setIsSaved(!isSaved);\n      }\n    } else {\n      console.log('User is not logged in');\n      // 在这里触发登录界面或者显示提示信息\n    }\n  };\n  // console.log(\"t1\")\n  // console.log(Object.values(comments))\n\n  return (\n    <div >\n    <div className=\"container mt-4\" >\n      {recipe ? (\n        <div className=\"row\">\n          <div className=\"col-md-6 mb-4\">\n            <img src={recipe.strMealThumb} alt={recipe.strMeal} className=\"img-fluid\" />\n          </div>\n          <div className=\"col-md-6\">\n            <h2>{recipe.strMeal}</h2>\n            <p>{recipe.strArea} | {recipe.strTags}</p>\n            <h4>Ingredients</h4>\n            <ul>\n              {Object.keys(recipe)\n                .filter(key => key.includes('strIngredient') && recipe[key])\n                .map((ingredientKey, index) => (\n                  <li key={index}>{recipe[ingredientKey]} - {recipe[`strMeasure${ingredientKey.slice(13)}`]}</li>\n                ))}\n            </ul>\n            <h4>Instructions</h4>\n            <p>{recipe.strInstructions}</p>\n          </div>\n        </div>\n      ) : (\n        <p>Loading recipe...</p>\n      )}\n       {/* 保存或取消保存按钮 */}\n       {user && (\n        <div className=\"mb-4\">\n          <button className=\"btn btn-primary\" onClick={handleSave} style={{ backgroundColor:'black'}}>\n            {isSaved ? 'Unsave' : 'Save'}\n          </button>\n        </div>\n      )}\n\n      {user && (\n        <div className=\"mb-4\">\n          <h4>Comments</h4>\n          <textarea\n            rows=\"4\"\n            className=\"form-control mb-2\"\n            placeholder=\"Write your comment here...\"\n            value={commentContent}\n            onChange={(e) => setCommentContent(e.target.value)}\n          ></textarea>\n          <button className=\"btn btn-primary\" onClick={handlePostComment} style={{ backgroundColor:'black'}}>\n            Post\n          </button>\n        </div>\n      )}\n      \n\n      {/* 显示已有的评论 */}\n      <div className=\"mb-4\">\n        <ul style={{listStyle:'none'}}>\n          {/* {Object.entries(comments).map(([key, value], index) => (\n  <li key={index}>\n  <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            {key === 'userId' && (\n              <Link to={`/Profile/${value}`}>\n                <span style={{ marginRight: '10px' }}>{value}</span>\n              </Link>\n            )}\n            {key === 'time' && (\n              <span>{value}</span>\n            )}\n          </div>\n          {key === 'commentContent' && (\n            <div>{value}</div>\n          )}\n        </div>\n      </li>\n))} */}\n{comments.map((comment, index) => (\n      <li key={index}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <Link to={`/Profile/${comment.userId}`}>\n              <span style={{ marginRight: '10px' }}>{comment.userId}</span>\n            </Link>\n            <span>{formatDate(comment.time)}</span>\n          </div>\n          <p>{comment.commentContent}</p>\n        </div>\n      </li>\n    ))}\n        </ul>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default RecipeDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAC1D,OAAO,MAAMC,SAAS,GAAI,GAAEJ,QAAS,iBAAgB;AAGrD,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnC;EACA,MAAMC,QAAQ,GAAC,OAAO;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMsB,GAAG,GAAI,oCAAoC;EACjD,MAAMC,QAAQ,GAAI,0CAA0C;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC;IAC/B0B,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,cAAc;IACxBC,KAAK,EAAE,kBAAkB;IACzBC,KAAK,EAAE,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAE;IACrC;EACF,CAAC,CAAC;;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMgC,oBAAoB,GAAG,MAAOjB,QAAQ,IAAK;IAC/C,MAAMkB,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAE,GAAEZ,GAAI,IAAGP,QAAS,EAAC,CAAC;IACtD,OAAOkB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,MAAM,IAAK;IACvC,MAAMJ,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAE,GAAEX,QAAS,IAAGc,MAAO,EAAC,CAAC;IACzD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACE,MAAMG,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAM7B,KAAK,CAACoC,IAAI,CAAClB,GAAG,EAAEiB,WAAW,CAAC;MACnD,OAAON,QAAQ,CAACQ,MAAM,KAAK,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,KAAK,CAAC,CAAC;IAChB;EACJ,CAAC;;EAED,MAAME,UAAU,GAAIC,UAAU,IAAK;IACjC,OAAOA,UAAU,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACtC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEX,MAAM,KAAK;IACrD,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAM7B,KAAK,CAACoC,IAAI,CAAE,GAAElB,GAAI,WAAUe,MAAO,EAAC,EAAEW,SAAS,CAAC;MACvE,OAAOf,QAAQ;IACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EAEF,CAAC;EAGCzC,SAAS,CAAC,MAAM;IACd,MAAMgD,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF;QACA,MAAMhB,QAAQ,GAAG,MAAMiB,KAAK,CAAE,wDAAuDnC,QAAS,EAAC,CAAC;QAChG,MAAMoB,IAAI,GAAG,MAAMF,QAAQ,CAACkB,IAAI,CAAC,CAAC;QAClClC,SAAS,CAACkB,IAAI,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC;QAExB,MAAMC,WAAW,GAAGC,aAAa,CAAC,CAAC,CAAC,CAAC;QACrC;QACA;QACA;QACA;QACA;;QAEAvB,UAAU,CAACsB,WAAW,CAAC,CAAC,CAAC;QACzB;QACAV,OAAO,CAACY,GAAG,CAACxC,QAAQ,CAAC;QACrB,MAAMyC,YAAY,GAAG,MAAMxB,oBAAoB,CAACjB,QAAQ,CAAC;QACzD4B,OAAO,CAACY,GAAG,CAAC,QAAQ,CAAC;QACrBZ,OAAO,CAACY,GAAG,CAACC,YAAY,CAACpC,QAAQ,CAAC;QAClCC,WAAW,CAACmC,YAAY,CAACpC,QAAQ,CAAC;QAClC;MAEF,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDO,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAG,CAAClC,QAAQ,EAACe,OAAO,CAAC,CAAC;EAGvB,MAAM2B,iBAAiB,GAAG,MAAAA,CAAA,KAAW;IACnC,MAAMpB,MAAM,GAAGb,IAAI,CAACE,EAAE,CAAC,CAAC;IACxB;IACA,MAAMa,WAAW,GAAG;MAChB;MACAF,MAAM,EAAEA,MAAM;MACdtB,QAAQ,EAAEA,QAAQ;MAAE;MACpBG,cAAc,EAAEA,cAAc;MAC9BwC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAE;IACpC,CAAC;;IACD,IAAI;MACA,MAAM3B,QAAQ,GAAG,MAAMK,aAAa,CAACC,WAAW,CAAC;MACjDI,OAAO,CAACY,GAAG,CAAC,kBAAkB,GAACtB,QAAQ,CAAC;MACxC,IAAIA,QAAQ,EAAE;QACd;QACA;QACAd,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB;QACAE,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAACmB,WAAW,CAAC,CAAC;MACtC,CAAC,MAAM;QACL;QACAI,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC/B,IAAI;MACF,MAAMjB,MAAM,GAAGb,IAAI,CAACE,EAAE;;MAEtB;MACA,MAAMmC,WAAW,GAAG,MAAMzB,cAAc,CAACC,MAAM,CAAC;MAChDM,OAAO,CAACY,GAAG,CAAC,eAAe,CAAC;MAC5BZ,OAAO,CAACY,GAAG,CAACM,WAAW,CAAC;MACxB,MAAMP,aAAa,GAAGO,WAAW,CAACrC,IAAI,CAACsC,UAAU,CAACC,QAAQ,CAAChD,QAAQ,CAAC;MAEpE4B,OAAO,CAACY,GAAG,CAACD,aAAa,CAAC,CAAC,CAAC;MAC5B,OAAOA,aAAa;IACtB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EAEF,CAAC;;EAED;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMsB,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC5B,IAAIxC,IAAI,EAAE;MACR,IAAIM,OAAO,EAAE;QACX;QACAa,OAAO,CAACY,GAAG,CAAC,eAAe,CAAC;QAC5B;QACA;QACA;;QAEA,MAAMM,WAAW,GAAG,MAAMzB,cAAc,CAACZ,IAAI,CAACE,EAAE,CAAC;QACjD,MAAMuC,iBAAiB,GAAGJ,WAAW,CAACrC,IAAI,CAACsC,UAAU,CAACI,MAAM,CAACxC,EAAE,IAAIA,EAAE,KAAKX,QAAQ,CAAC;QACnF8C,WAAW,CAACrC,IAAI,CAACsC,UAAU,GAAGG,iBAAiB;QAC/C,MAAMhC,QAAQ,GAAG,MAAMc,iBAAiB,CAACc,WAAW,CAACrC,IAAI,CAACsC,UAAU,EAAEtC,IAAI,CAACE,EAAE,CAAC;QAE9EiB,OAAO,CAACY,GAAG,CAACtB,QAAQ,CAAC;QACrB;QACAF,UAAU,CAAC,CAACD,OAAO,CAAC;MAEtB,CAAC,MAAM;QACL;QACA,MAAMqC,YAAY,GAAG,CAAC,GAAG3C,IAAI,CAACK,KAAK,EAAEd,QAAQ,CAAC;QAC9C,MAAMkB,QAAQ,GAAG,MAAMc,iBAAiB,CAACoB,YAAY,EAAE3C,IAAI,CAACE,EAAE,CAAC;QAC/D;QACA;QACAD,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEK,KAAK,EAAEsC;QAAa,CAAC,CAAC;QACzC;QACApC,UAAU,CAAC,CAACD,OAAO,CAAC;MACtB;IACF,CAAC,MAAM;MACLa,OAAO,CAACY,GAAG,CAAC,uBAAuB,CAAC;MACpC;IACF;EACF,CAAC;EACD;EACA;;EAEA,oBACEjD,OAAA;IAAA8D,QAAA,eACA9D,OAAA;MAAK+D,SAAS,EAAC,gBAAgB;MAAAD,QAAA,GAC5BpD,MAAM,gBACLV,OAAA;QAAK+D,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClB9D,OAAA;UAAK+D,SAAS,EAAC,eAAe;UAAAD,QAAA,eAC5B9D,OAAA;YAAKgE,GAAG,EAAEtD,MAAM,CAACuD,YAAa;YAACC,GAAG,EAAExD,MAAM,CAACyD,OAAQ;YAACJ,SAAS,EAAC;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACNvE,OAAA;UAAK+D,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACvB9D,OAAA;YAAA8D,QAAA,EAAKpD,MAAM,CAACyD;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBvE,OAAA;YAAA8D,QAAA,GAAIpD,MAAM,CAAC8D,OAAO,EAAC,KAAG,EAAC9D,MAAM,CAAC+D,OAAO;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1CvE,OAAA;YAAA8D,QAAA,EAAI;UAAW;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBvE,OAAA;YAAA8D,QAAA,EACGY,MAAM,CAACC,IAAI,CAACjE,MAAM,CAAC,CACjBkD,MAAM,CAACgB,GAAG,IAAIA,GAAG,CAACnB,QAAQ,CAAC,eAAe,CAAC,IAAI/C,MAAM,CAACkE,GAAG,CAAC,CAAC,CAC3DC,GAAG,CAAC,CAACC,aAAa,EAAEC,KAAK,kBACxB/E,OAAA;cAAA8D,QAAA,GAAiBpD,MAAM,CAACoE,aAAa,CAAC,EAAC,KAAG,EAACpE,MAAM,CAAE,aAAYoE,aAAa,CAACE,KAAK,CAAC,EAAE,CAAE,EAAC,CAAC;YAAA,GAAhFD,KAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgF,CAC/F;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACLvE,OAAA;YAAA8D,QAAA,EAAI;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBvE,OAAA;YAAA8D,QAAA,EAAIpD,MAAM,CAACuE;UAAe;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENvE,OAAA;QAAA8D,QAAA,EAAG;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxB,EAECrD,IAAI,iBACJlB,OAAA;QAAK+D,SAAS,EAAC,MAAM;QAAAD,QAAA,eACnB9D,OAAA;UAAQ+D,SAAS,EAAC,iBAAiB;UAACmB,OAAO,EAAExB,UAAW;UAACyB,KAAK,EAAE;YAAEC,eAAe,EAAC;UAAO,CAAE;UAAAtB,QAAA,EACxFtC,OAAO,GAAG,QAAQ,GAAG;QAAM;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,EAEArD,IAAI,iBACHlB,OAAA;QAAK+D,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnB9D,OAAA;UAAA8D,QAAA,EAAI;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBvE,OAAA;UACEqF,IAAI,EAAC,GAAG;UACRtB,SAAS,EAAC,mBAAmB;UAC7BuB,WAAW,EAAC,4BAA4B;UACxCC,KAAK,EAAE3E,cAAe;UACtB4E,QAAQ,EAAGC,CAAC,IAAK5E,iBAAiB,CAAC4E,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACZvE,OAAA;UAAQ+D,SAAS,EAAC,iBAAiB;UAACmB,OAAO,EAAE/B,iBAAkB;UAACgC,KAAK,EAAE;YAAEC,eAAe,EAAC;UAAO,CAAE;UAAAtB,QAAA,EAAC;QAEnG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAIDvE,OAAA;QAAK+D,SAAS,EAAC,MAAM;QAAAD,QAAA,eACnB9D,OAAA;UAAImF,KAAK,EAAE;YAACQ,SAAS,EAAC;UAAM,CAAE;UAAA7B,QAAA,EAoBrChD,QAAQ,CAAC+D,GAAG,CAAC,CAACe,OAAO,EAAEb,KAAK,kBACvB/E,OAAA;YAAA8D,QAAA,eACE9D,OAAA;cAAKmF,KAAK,EAAE;gBAAEU,OAAO,EAAE,MAAM;gBAAEC,aAAa,EAAE;cAAS,CAAE;cAAAhC,QAAA,gBACvD9D,OAAA;gBAAKmF,KAAK,EAAE;kBAAEU,OAAO,EAAE,MAAM;kBAAEE,UAAU,EAAE;gBAAS,CAAE;gBAAAjC,QAAA,gBACpD9D,OAAA,CAACJ,IAAI;kBAACoG,EAAE,EAAG,YAAWJ,OAAO,CAAC7D,MAAO,EAAE;kBAAA+B,QAAA,eACrC9D,OAAA;oBAAMmF,KAAK,EAAE;sBAAEc,WAAW,EAAE;oBAAO,CAAE;oBAAAnC,QAAA,EAAE8B,OAAO,CAAC7D;kBAAM;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,eACPvE,OAAA;kBAAA8D,QAAA,EAAOxB,UAAU,CAACsD,OAAO,CAACxC,IAAI;gBAAC;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC,eACNvE,OAAA;gBAAA8D,QAAA,EAAI8B,OAAO,CAAChF;cAAc;gBAAAwD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UAAC,GATCQ,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC/D,EAAA,CApSIF,aAAa;AAAA4F,EAAA,GAAb5F,aAAa;AAsSnB,eAAeA,aAAa;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}